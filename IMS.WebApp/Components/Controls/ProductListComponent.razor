@inject IViewProductsByNameUseCase ViewProductsByNameUseCase

<table class="table">

    <thead>
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @if (_products is not null && _products.Count > 0)
        {
            foreach (var inv in _products)
            {
                <ProductListItemComponent @rendermode="InteractiveServer" Product="inv"></ProductListItemComponent>
            }
        }
    </tbody>

</table>

@code {
    private List<Product>? _products;

    [Parameter]
    public string? SearchProductFilter { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _products = (await ViewProductsByNameUseCase.ExecuteAsync(SearchProductFilter??string.Empty)).ToList();
    } 
}
