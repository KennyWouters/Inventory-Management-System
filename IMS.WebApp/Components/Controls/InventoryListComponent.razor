@using IMS.UseCases.Inventories.Interfaces
@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase


<table class="table">

    <thead>
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @if (_inventories is not null && _inventories.Count > 0)
        {
            foreach (var inv in _inventories)
            {
                <InventoryListItemComponent Inventory="inv"></InventoryListItemComponent>
            }
        }
    </tbody>

</table>


@code {
    private List<Inventory>? _inventories;

    [Parameter]
    public string? SearchInventoryFilter { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(SearchInventoryFilter??string.Empty)).ToList();
    } 

}
