<SearchProductInventoriesComponent OnInventorySelected="HandleInventorySelected"></SearchProductInventoriesComponent>
@if (this.Product is not null &&
    this.Product.ProductInventories is not null && 
    this.Product.ProductInventories.Count > 0
)

{
    <table class="table">
    <thead >
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var productInventory in this.Product.ProductInventories)
        {   
            <tr>
                <td>@productInventory.Inventory?.InventoryName</td>
                <td>
                    <input type="number" min="0" @bind-value="productInventory.InventoryQuantity" />                           
                </td>
                <td>
                    <button type="button" 
                        class="btn btn-link"
                            @onclick="() => RemoveInventory(productInventory)">
                            Remove
                    </button>
                </td>
                    
                
            </tr>
}
    </tbody>
</table>
}

@code {
    [Parameter]
    public Product? Product { get; set; }

    private void RemoveInventory(ProductInventory productInventory)
    {
        this.Product?.RemoveInventory(productInventory);
    }

    private void HandleInventorySelected(Inventory inventory)
    {
        if (this.Product is not null)
        {
            this.Product?.AddInventory(inventory);
        }
    }

}
